name: 'Pull request main - v1'
on:
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    
      # Checkout project repository
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      
      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          registry-url: https://registry.npmjs.org/
          node-version: '14'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci
      
      # Configure Git
      - name: Git configuration
        run: |
          git config --global user.email "felipe.so.dev@gmail.com"
          git config --global user.name "GitHub Actions"
      
      # Configura changelog
      - name: Changelog configuration
        run: |
          npm run version
          npm run version-json
          
      # Push repository changes
      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          git push origin
          
      # Pega a versão do "package.json"
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        
      # Drafts your next Release notes as Pull Requests are merged into "main"
      # - uses: release-drafter/release-drafter@v5
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      
      # Cria a nova tag release
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.package-version.outputs.current-version }}
          release_name: ${{ steps.package-version.outputs.current-version }}
          body: |
            Conteúdo disponível no arquivo "CHANGELOG.md"
            https://github.com/felipe-frade/github-actions-test-2/blob/${{ steps.package-version.outputs.current-version }}/CHANGELOG.md#Versão-${{ steps.package-version.outputs.current-version }}
          draft: false
          prerelease: false
